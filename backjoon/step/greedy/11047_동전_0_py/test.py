from solution import solve
from util.test_runner import run_fun_solution

test_cases = [
    # 테스트 케이스 1: 동전이 하나인 경우 (동전 1원만 사용)
    # K=1000이면 1원짜리로 1000개 필요
    (
        "1 1000\n"
        "1\n",
        "1000\n"
    ),
    # 테스트 케이스 2: 동전 1원, 10원 사용 (오름차순 입력)
    # K=11일 때, 10원 1개와 1원 1개 → 총 2개
    (
        "2 11\n"
        "1\n"
        "10\n",
        "2\n"
    ),
    # 테스트 케이스 3: 동전 1원, 20원, 50원 사용
    # K=100일 때, 가장 큰 동전 50원부터 사용: 100//50=2, remainder 0 → 답은 2
    (
        "3 100\n"
        "1\n"
        "20\n"
        "50\n",
        "2\n"
    ),
    # 테스트 케이스 4: 동전 1원, 5원, 10원 사용
    # K=102일 때, 10원 10개 사용하면 100, 나머지 2원은 1원 2개 → 총 12개
    (
        "3 102\n"
        "1\n"
        "5\n"
        "10\n",
        "12\n"
    ),
    # 테스트 케이스 5: 대표적인 예제
    # K=4200, 동전 종류: 1, 5, 10, 50, 100, 500, 1000, 5000, 10000, 50000
    # → 1000원: 4개 (4*1000=4000), 나머지 200원 → 100원: 2개, 총 6개
    (
        "10 4200\n"
        "1\n"
        "5\n"
        "10\n"
        "50\n"
        "100\n"
        "500\n"
        "1000\n"
        "5000\n"
        "10000\n"
        "50000\n",
        "6\n"
    ),
    # 테스트 케이스 6: 동전 종류가 1, 7, 13, 20일 때
    # K=100인 경우 → 가장 큰 동전 20원: 100//20=5, 나머지 0 → 총 5개
    (
        "4 100\n"
        "1\n"
        "7\n"
        "13\n"
        "20\n",
        "5\n"
    ),
    # 테스트 케이스 7: 동전 종류: 1, 2, 5, 10, 20
    # K=923인 경우 → 20원: 923//20 = 46 (46×20=920), 남은 3원 → 2원: 1개, 남은 1원 → 1원: 1개
    # 총 동전 개수 = 46 + 1 + 1 = 48
    (
        "5 923\n"
        "1\n"
        "2\n"
        "5\n"
        "10\n"
        "20\n",
        "48\n"
    ),
    # 테스트 케이스 8: 다시 표준 동전 종류 (1, 5, 10, 50, 100, 500, 1000, 5000, 10000, 50000)
    # K=4790인 경우 →
    #  - 1000원: 4790//1000 = 4, 4×1000=4000, 남은 790원
    #  - 500원: 790//500 = 1, 1×500=500, 남은 290원
    #  - 100원: 290//100 = 2, 2×100=200, 남은 90원
    #  - 50원: 90//50 = 1, 1×50=50, 남은 40원
    #  - 10원: 40//10 = 4, 남은 0원
    # 총 동전 개수 = 4+1+2+1+4 = 12
    (
        "10 4790\n"
        "1\n"
        "5\n"
        "10\n"
        "50\n"
        "100\n"
        "500\n"
        "1000\n"
        "5000\n"
        "10000\n"
        "50000\n",
        "12\n"
    ),
    # 테스트 케이스 9: 동전 종류: 1, 10000, 1000000
    # K=100000000인 경우 → 가장 큰 동전 1000000: 100000000//1000000 = 100, 남은 0원, 답=100
    (
        "3 100000000\n"
        "1\n"
        "10000\n"
        "1000000\n",
        "100\n"
    ),
    # 테스트 케이스 10: 동전 종류: 1, 2, 5, 10, 50
    # K=99999인 경우 →
    #  - 50원: 99999 // 50 = 1999, 1999×50 = 99950, 남은 49원
    #  - 10원: 49 // 10 = 4, 4×10 = 40, 남은 9원
    #  - 5원: 9 // 5 = 1, 1×5 = 5, 남은 4원
    #  - 2원: 4 // 2 = 2, 2×2 = 4, 남은 0원
    # 총 동전 개수 = 1999 + 4 + 1 + 2 = 2006
    (
        "5 99999\n"
        "1\n"
        "2\n"
        "5\n"
        "10\n"
        "50\n",
        "2006\n"
    ),
]


def test():
  for input_data, expected_output in test_cases:
    output = run_fun_solution(input_data, solve)
    assert output == expected_output, f"Input: {input_data!r} Expected: {expected_output!r}, Got: {output!r}"
